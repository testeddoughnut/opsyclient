{
  "info": {
    "description": "It's Opsy!",
    "title": "opsy",
    "version": "v1"
  },
  "paths": {
    "/api/v1/login/": {
      "get": {
        "operationId": "show_login",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "login"
        ],
        "parameters": [],
        "description": "",
        "summary": "Get auth token.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          }
        }
      },
      "post": {
        "operationId": "create_login",
        "tags": [
          "login"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "description": "",
        "summary": "Login.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          }
        }
      },
      "patch": {
        "operationId": "patch_login",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "login"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserTokenUpdate"
            }
          }
        ],
        "description": "",
        "summary": "User self-service, such as updating email or password.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_login",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "login"
        ],
        "parameters": [],
        "description": "",
        "summary": "Logout.",
        "responses": {
          "205": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "operationId": "list_users",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string",
            "x-nullable": true,
            "maxLength": 64
          },
          {
            "in": "query",
            "name": "permission_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "role_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "role_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean",
            "x-nullable": true
          },
          {
            "in": "query",
            "name": "ldap_user",
            "required": false,
            "type": "boolean",
            "x-nullable": true
          }
        ],
        "description": "",
        "summary": "List users.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_user",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "description": "",
        "summary": "Create a new user.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/v1/users/{id_or_name}": {
      "get": {
        "operationId": "show_user",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a user.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_user",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a user.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_user",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a user.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/roles/": {
      "get": {
        "operationId": "list_roles",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128
          },
          {
            "in": "query",
            "name": "ldap_group",
            "required": false,
            "type": "string",
            "x-nullable": true,
            "maxLength": 128
          },
          {
            "in": "query",
            "name": "permssion_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "List roles.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_role",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "description": "",
        "summary": "Create a new role.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      }
    },
    "/api/v1/roles/{id_or_name}": {
      "get": {
        "operationId": "show_role",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a role.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_role",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RoleUpdate"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a role.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_role",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a role.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/roles/{id_or_name}/permissions/": {
      "get": {
        "operationId": "list_role_permissions",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "List role permissions.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RolePermission"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_role_permission",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RolePermission"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Create a role permission.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RolePermission"
            }
          }
        }
      }
    },
    "/api/v1/roles/{id_or_name}/permissions/{permission_id_or_name}": {
      "get": {
        "operationId": "show_role_permission",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "permission_id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a role permission.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RolePermission"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_role_permission",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RolePermissionUpdate"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "permission_id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a role permission.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RolePermission"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_role_permission",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "permission_id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a role permission.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/zones/": {
      "get": {
        "operationId": "list_zones",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36,
            "description": "The unique UUID of the zone."
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128,
            "description": "The unique name of the zone."
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string",
            "maxLength": 128,
            "description": "The description of the zone."
          }
        ],
        "description": "",
        "summary": "List zones.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Zone"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_zone",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        ],
        "description": "",
        "summary": "Create a new zone.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        }
      }
    },
    "/api/v1/zones/{id_or_name}": {
      "get": {
        "operationId": "show_zone",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a zone.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_zone",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ZoneUpdate"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a zone.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_zone",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a zone.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/hosts/": {
      "get": {
        "operationId": "list_hosts",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "zone_id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "zone_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128
          }
        ],
        "description": "",
        "summary": "List hosts.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_host",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "description": "",
        "summary": "Create a new host.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        }
      }
    },
    "/api/v1/hosts/{id_or_name}": {
      "get": {
        "operationId": "show_host",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a host.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_host",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HostUpdate"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a host.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_host",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a host.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/hosts/{id_or_name}/group_mappings/": {
      "get": {
        "operationId": "list_group_mappings",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "priority",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-nullable": true
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "List group mappings.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostGroupMapping"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_group_mapping",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HostGroupMapping"
            }
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Create a group mapping.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HostGroupMapping"
            }
          }
        }
      }
    },
    "/api/v1/hosts/{id_or_name}/group_mappings/{group_id_or_name}": {
      "get": {
        "operationId": "show_group_mapping",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a group mapping.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HostGroupMapping"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_group_mapping",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HostGroupMappingUpdate"
            }
          },
          {
            "in": "path",
            "name": "group_id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a group mapping.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HostGroupMapping"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_group_mapping",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_id_or_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_or_name",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a group mapping.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/api/v1/groups/": {
      "get": {
        "operationId": "list_groups",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string",
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string",
            "maxLength": 128
          },
          {
            "in": "query",
            "name": "zone_id",
            "required": false,
            "type": "string",
            "x-nullable": true,
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "zone_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parent_id",
            "required": false,
            "type": "string",
            "x-nullable": true,
            "maxLength": 36
          },
          {
            "in": "query",
            "name": "parent_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "host_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "host_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "default_priority",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "description": "",
        "summary": "List groups.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_group",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "description": "",
        "summary": "Create a group.",
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}": {
      "get": {
        "operationId": "show_group",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Show a group.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "patch": {
        "operationId": "update_group",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "body",
            "required": false,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GroupUpdate"
            }
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Update a group.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_group",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "type": "string"
          }
        ],
        "description": "",
        "summary": "Delete a group.",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "login",
      "description": "Endpoints for logging in and out of Opsy."
    },
    {
      "name": "users",
      "description": "Endpoints for user management."
    },
    {
      "name": "roles",
      "description": "Endpoints for role management."
    },
    {
      "name": "zones",
      "description": "Zones are the base grouping for inventory in Opsy."
    },
    {
      "name": "hosts",
      "description": "Hosts are your servers."
    },
    {
      "name": "groups",
      "description": "Groups are logical groupings of your hosts."
    }
  ],
  "swagger": "2.0",
  "definitions": {
    "UserToken": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "user_name": {
          "type": "string",
          "maxLength": 128
        },
        "full_name": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "maxLength": 64
        },
        "ldap_user": {
          "type": "boolean",
          "x-nullable": true
        },
        "token": {
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "maxLength": 255
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "required": [
        "user_name"
      ]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "force_renew": {
          "type": "boolean",
          "default": false
        },
        "user_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "password",
        "user_name"
      ]
    },
    "UserTokenUpdate": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "maxLength": 64
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object",
      "properties": {}
    },
    "RoleRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "_links": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "RolePermissionRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "_links": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "full_name": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "maxLength": 64
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": true
        },
        "ldap_user": {
          "type": "boolean",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "roles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleRef"
          }
        },
        "permissions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RolePermissionRef"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "UserCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "full_name": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "maxLength": 64
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": true
        },
        "ldap_user": {
          "type": "boolean",
          "x-nullable": true
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "password"
      ]
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "full_name": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "maxLength": 64
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": true
        },
        "ldap_user": {
          "type": "boolean",
          "x-nullable": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "_links": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "ldap_group": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 128
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "permissions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RolePermissionRef"
          }
        },
        "users": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRef"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "RoleUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "ldap_group": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 128
        },
        "description": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "RolePermission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "role": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/RoleRef"
            }
          ]
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "required": [
        "name"
      ]
    },
    "RolePermissionUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Zone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36,
          "description": "The ID of the zone."
        },
        "name": {
          "type": "string",
          "maxLength": 128,
          "description": "The name of the zone."
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "ZoneUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128,
          "description": "The name of the zone."
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        }
      }
    },
    "ZoneRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36,
          "description": "The ID of the zone."
        },
        "name": {
          "type": "string",
          "maxLength": 128,
          "description": "The name of the zone."
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "HostGroupMappingRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "host_id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "host_name": {
          "type": "string"
        },
        "group_id": {
          "type": "string"
        },
        "group_name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "host_id"
      ]
    },
    "Host": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "zone_id": {
          "type": "string",
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        },
        "compiled_vars": {
          "type": "object",
          "readOnly": true
        },
        "zone": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ZoneRef"
            }
          ]
        },
        "group_mappings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostGroupMappingRef"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "zone_id"
      ]
    },
    "HostUpdate": {
      "type": "object",
      "properties": {
        "zone_id": {
          "type": "string",
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        }
      },
      "required": [
        "zone_id"
      ]
    },
    "HostRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "GroupRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "HostGroupMapping": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "host_id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "group_id": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "host": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/HostRef"
            }
          ]
        },
        "group": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/GroupRef"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "host_id"
      ]
    },
    "HostGroupMappingUpdate": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "maxLength": 36
        },
        "zone_id": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 36
        },
        "parent_id": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "default_priority": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        },
        "compiled_vars": {
          "type": "object",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-nullable": true
        },
        "_links": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "GroupUpdate": {
      "type": "object",
      "properties": {
        "zone_id": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 36
        },
        "parent_id": {
          "type": "string",
          "x-nullable": true,
          "maxLength": 36
        },
        "name": {
          "type": "string",
          "maxLength": 128
        },
        "default_priority": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "vars": {
          "type": "object",
          "x-nullable": true
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "X-AUTH-TOKEN"
    }
  }
}
